{
  "openapi": "3.0.0",
  "info": {
    "title": "Query API",
    "version": "1.1.3"
  },
  "paths": {
    "/query": {
      "post": {
        "tags": ["query"],
        "summary": "Query journal",
        "description": "Query journal",
        "operationId": "query",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["query"],
                "properties": {
                  "query": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rows": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/services/{service}/openapi": {
      "get": {
        "tags": ["service"],
        "summary": "Get service OpenAPI",
        "description": "Get the service OpenAPI 3.1 contract.",
        "operationId": "get_service_openapi",
        "parameters": [
          {
            "name": "service",
            "in": "path",
            "description": "Fully qualified service name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OpenAPI 3.1 of the service",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/query/invocations": {
      "post": {
        "tags": ["query-invocations"],
        "summary": "List invocations",
        "description": "List invocations",
        "operationId": "list_invocations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListInvocationsRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["rows", "total_count"],
                  "properties": {
                    "rows": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Invocation"
                      }
                    },
                    "total_count": {
                      "type": "integer"
                    },
                    "limit": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/query/invocations/{invocationId}": {
      "get": {
        "tags": ["query-invocations"],
        "summary": "Get invocation",
        "description": "Get invocation",
        "operationId": "get_invocation",
        "parameters": [
          {
            "name": "invocationId",
            "in": "path",
            "description": "Invocation id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invocation"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/query/invocations/{invocationId}/journal": {
      "get": {
        "tags": ["query-invocations"],
        "summary": "Get invocation journal",
        "description": "Get invocation journal",
        "operationId": "get_invocation_journal",
        "parameters": [
          {
            "name": "invocationId",
            "in": "path",
            "description": "Invocation id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["entries"],
                  "properties": {
                    "entries": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/JournalEntry"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/query/virtualObjects/{name}/keys/{key}/queue": {
      "get": {
        "tags": ["query-invocations"],
        "summary": "Get Virtual Object inbox inbox for a key",
        "description": "Get Virtual Object inbox inbox for a key",
        "operationId": "get_inbox",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "invocationId",
            "in": "query",
            "description": "Invocation id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InboxResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/query/services/{name}/state/keys": {
      "get": {
        "tags": ["query-invocations"],
        "summary": "Get state keys",
        "description": "Get state keys",
        "operationId": "get_state_keys",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateInterfaceResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/query/services/{name}/state": {
      "post": {
        "tags": ["list-state"],
        "summary": "List virtual object state",
        "description": "List virtual object state",
        "operationId": "list_virtual_object_state",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["keys"],
                "properties": {
                  "keys": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["objects"],
                  "properties": {
                    "objects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/StateResponse"
                          },
                          {
                            "type": "object",
                            "required": ["key"],
                            "properties": {
                              "key": {
                                "type": "string"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/query/services/{name}/keys/{key}/state": {
      "get": {
        "tags": ["get-state"],
        "summary": "Get state keys",
        "description": "Get state keys",
        "operationId": "get_state",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "key",
            "in": "path",
            "description": "key",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["state"],
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/StateResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "version": {
                          "type": "string"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          }
        }
      }
    },
    "/query/services/{name}/state/query": {
      "post": {
        "tags": ["query-state"],
        "summary": "Query virtual object state",
        "description": "Query virtual object state",
        "operationId": "query_virtual_object_state",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "service name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ListVirtualObjectStateRequestBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": ["keys"],
                  "properties": {
                    "keys": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          },
          "503": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDescriptionResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "VirtualObjectState": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "ListInvocationsRequestBody": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterItem"
            }
          }
        }
      },
      "ListVirtualObjectStateRequestBody": {
        "type": "object",
        "properties": {
          "filters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterItem"
            }
          }
        }
      },
      "FilterItem": {
        "allOf": [
          {
            "$ref": "#/components/schemas/FilterBaseItem"
          },
          {
            "oneOf": [
              {
                "$ref": "#/components/schemas/FilterNumberItem"
              },
              {
                "$ref": "#/components/schemas/FilterStringItem"
              },
              {
                "$ref": "#/components/schemas/FilterDateItem"
              },
              {
                "$ref": "#/components/schemas/FilterStringListItem"
              },
              {
                "$ref": "#/components/schemas/FilterNullItem"
              }
            ]
          }
        ]
      },
      "FilterBaseItem": {
        "type": "object",
        "required": ["type", "field"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["STRING", "NUMBER", "DATE", "STRING_LIST", "NULL"]
          },
          "field": {
            "type": "string"
          }
        }
      },
      "FilterNumberItem": {
        "type": "object",
        "required": ["type", "operation"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["NUMBER"]
          },
          "operation": {
            "type": "string",
            "enum": [
              "EQUALS",
              "NOT_EQUALS",
              "GREATER_THAN",
              "LESS_THAN",
              "GREATER_THAN_OR_EQUAL",
              "LESS_THAN_OR_EQUAL"
            ]
          },
          "value": {
            "type": "number"
          }
        }
      },
      "FilterStringItem": {
        "type": "object",
        "required": ["type", "operation"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["STRING"]
          },
          "operation": {
            "type": "string",
            "enum": ["EQUALS", "NOT_EQUALS", "CONTAINS", "NOT_CONTAINS"]
          },
          "value": {
            "type": "string"
          }
        }
      },
      "FilterNullItem": {
        "type": "object",
        "required": ["type", "operation"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["NULL"]
          },
          "operation": {
            "type": "string",
            "enum": ["IS", "IS_NOT"]
          }
        }
      },
      "FilterStringListItem": {
        "type": "object",
        "required": ["type", "operation", "value"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["STRING_LIST"]
          },
          "operation": {
            "type": "string",
            "enum": ["IN", "NOT_IN"]
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FilterDateItem": {
        "type": "object",
        "required": ["type", "operation", "value"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["DATE"]
          },
          "operation": {
            "type": "string",
            "enum": ["BEFORE", "AFTER"]
          },
          "value": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "StateInterfaceResponse": {
        "type": "object",
        "properties": {
          "keys": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["name"],
              "properties": {
                "name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "StateResponse": {
        "type": "object",
        "required": ["state"],
        "properties": {
          "state": {
            "type": "array",
            "items": {
              "type": "object",
              "required": ["name", "value"],
              "properties": {
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "JournalEntry": {
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "oneOf": [
              {
                "$ref": "#/components/schemas/InputJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/GetStateJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/SetStateJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/GetStateKeysJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/ClearStateJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/ClearAllStateJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/SleepJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/GetPromiseJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/PeekPromiseJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/CompletePromiseJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/OneWayCallJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/CallJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/AwakeableJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/CompleteAwakeableJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/RunJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/CancelInvocationJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/GetCallInvocationIdJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/AttachInvocationJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/GetInvocationOutputJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/CustomJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/OutputJournalEntryType"
              },
              {
                "$ref": "#/components/schemas/CancelSignalJournalEntryType"
              }
            ]
          }
        ]
      },
      "JournalRawEntry": {
        "type": "object",
        "required": ["index", "entry_type"],
        "properties": {
          "index": { "type": "integer" },
          "raw": { "type": "string", "format": "binary" },
          "sleep_wakeup_at": { "type": "string", "format": "date-time" },
          "completed": { "type": "boolean" },
          "promise_name": { "type": "string" },
          "invoked_target": { "type": "string" },
          "invoked_id": { "type": "string" },
          "name": { "type": "string" },
          "entry_json": {
            "type": "string"
          },
          "appended_at": {
            "type": "string",
            "format": "data-time"
          },
          "version": {
            "type": "integer"
          },
          "entry_type": {
            "type": "string",
            "enum": [
              "Input",
              "Output",
              "GetState",
              "GetEagerState",
              "SetState",
              "GetStateKeys",
              "GetEagerStateKeys",
              "ClearState",
              "ClearAllState",
              "Sleep",
              "GetPromise",
              "PeekPromise",
              "CompletePromise",
              "OneWayCall",
              "Call",
              "Awakeable",
              "CompleteAwakeable",
              "Run",
              "CancelInvocation",
              "GetCallInvocationId",
              "AttachInvocation",
              "GetInvocationOutput",
              "Custom",
              "CancelSignal"
            ]
          }
        }
      },
      "JournalBaseEntry": {
        "type": "object",
        "required": ["index", "entry_type"],
        "properties": {
          "index": { "type": "integer" },
          "version": { "type": "integer" },
          "command_index": { "type": "integer" },
          "start": {
            "type": "string",
            "format": "data-time"
          },
          "end": {
            "type": "string",
            "format": "data-time"
          },
          "completed": { "type": "boolean" }
        }
      },
      "FailureEntry": {
        "type": "object",
        "properties": {
          "message": { "type": "string" },
          "restate_code": { "type": "string" }
        }
      },
      "CancelSignalJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "entry_type": { "type": "string", "enum": ["CancelSignal"] }
            }
          }
        ]
      },
      "InputJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "entry_type": { "type": "string", "enum": ["Input"] },
              "body": { "type": "string" },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["key", "value"],
                  "properties": {
                    "key": { "type": "string" },
                    "value": { "type": "string" }
                  }
                }
              }
            }
          }
        ]
      },
      "OutputJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "entry_type": { "type": "string", "enum": ["Output"] },
              "body": { "type": "string" },
              "failure": {
                "$ref": "#/components/schemas/FailureEntry"
              }
            }
          }
        ]
      },
      "GetStateJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "entry_type": {
                "type": "string",
                "enum": ["GetState", "GetEagerState"]
              },
              "key": { "type": "string" },
              "value": { "type": "string" },
              "completed": { "type": "boolean" },
              "failure": {
                "$ref": "#/components/schemas/FailureEntry"
              }
            }
          }
        ]
      },
      "SetStateJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "entry_type": { "type": "string", "enum": ["SetState"] },
              "key": { "type": "string" },
              "value": { "type": "string" }
            }
          }
        ]
      },
      "GetStateKeysJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "entry_type": {
                "type": "string",
                "enum": ["GetStateKeys", "GetEagerStateKeys"]
              },
              "completed": { "type": "boolean" },
              "keys": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "failure": {
                "$ref": "#/components/schemas/FailureEntry"
              }
            }
          }
        ]
      },
      "ClearStateJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "key": {
                "type": "string"
              },
              "entry_type": { "type": "string", "enum": ["ClearState"] }
            }
          }
        ]
      },
      "ClearAllStateJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "entry_type": { "type": "string", "enum": ["ClearAllState"] }
            }
          }
        ]
      },
      "SleepJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "completed": { "type": "boolean" },
              "failure": {
                "$ref": "#/components/schemas/FailureEntry"
              },
              "sleep_wakeup_at": {
                "type": "string",
                "format": "data-time"
              },
              "entry_type": { "type": "string", "enum": ["Sleep"] },
              "name": {
                "type": "string"
              }
            }
          }
        ]
      },
      "GetPromiseJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "completed": { "type": "boolean" },
              "entry_type": { "type": "string", "enum": ["GetPromise"] },
              "promise_name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "failure": {
                "$ref": "#/components/schemas/FailureEntry"
              }
            }
          }
        ]
      },
      "PeekPromiseJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "completed": { "type": "boolean" },
              "entry_type": { "type": "string", "enum": ["PeekPromise"] },
              "promise_name": {
                "type": "string"
              },
              "value": {
                "type": "string"
              },
              "failure": {
                "$ref": "#/components/schemas/FailureEntry"
              }
            }
          }
        ]
      },
      "CompletePromiseJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "completed": { "type": "boolean" },
              "promise_name": {
                "type": "string"
              },
              "entry_type": { "type": "string", "enum": ["CompletePromise"] },
              "completion": {
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string"
                  },
                  "failure": {
                    "$ref": "#/components/schemas/FailureEntry"
                  }
                }
              },
              "failure": {
                "$ref": "#/components/schemas/FailureEntry"
              }
            }
          }
        ]
      },
      "OneWayCallJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "invoked_id": {
                "type": "string"
              },
              "invoked_target": {
                "type": "string"
              },
              "key": {
                "type": "string"
              },
              "serviceName": {
                "type": "string"
              },
              "handlerName": {
                "type": "string"
              },
              "parameters": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["key", "value"],
                  "properties": {
                    "key": { "type": "string" },
                    "value": { "type": "string" }
                  }
                }
              },
              "invokeTime": {
                "type": "string",
                "format": "date-time"
              },
              "entry_type": { "type": "string", "enum": ["OneWayCall"] }
            }
          }
        ]
      },
      "CallJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "completed": { "type": "boolean" },
              "invoked_id": {
                "type": "string"
              },
              "invoked_target": {
                "type": "string"
              },
              "failure": {
                "$ref": "#/components/schemas/FailureEntry"
              },
              "key": {
                "type": "string"
              },
              "serviceName": {
                "type": "string"
              },
              "handlerName": {
                "type": "string"
              },
              "parameters": {
                "type": "string"
              },
              "headers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": ["key", "value"],
                  "properties": {
                    "key": { "type": "string" },
                    "value": { "type": "string" }
                  }
                }
              },
              "value": { "type": "string" },
              "entry_type": { "type": "string", "enum": ["Call"] }
            }
          }
        ]
      },
      "AwakeableJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "completed": { "type": "boolean" },
              "entry_type": { "type": "string", "enum": ["Awakeable"] },
              "failure": {
                "$ref": "#/components/schemas/FailureEntry"
              },
              "value": { "type": "string" }
            }
          }
        ]
      },
      "CompleteAwakeableJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "entry_type": { "type": "string", "enum": ["CompleteAwakeable"] },
              "failure": {
                "$ref": "#/components/schemas/FailureEntry"
              },
              "value": { "type": "string" },
              "id": { "type": "string" }
            }
          }
        ]
      },
      "CancelInvocationJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "entry_type": { "type": "string", "enum": ["CancelInvocation"] }
            }
          }
        ]
      },
      "GetCallInvocationIdJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "completed": { "type": "boolean" },
              "entry_type": {
                "type": "string",
                "enum": ["GetCallInvocationId"]
              }
            }
          }
        ]
      },
      "AttachInvocationJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "entry_type": {
                "type": "string",
                "enum": ["AttachInvocation"]
              },
              "invocationId": {
                "type": "string"
              },
              "failure": {
                "$ref": "#/components/schemas/FailureEntry"
              },
              "value": { "type": "string" }
            }
          }
        ]
      },
      "GetInvocationOutputJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "entry_type": {
                "type": "string",
                "enum": ["GetInvocationOutput"]
              }
            }
          }
        ]
      },
      "CustomJournalEntryType": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "entry_type": {
                "type": "string",
                "enum": ["Custom"]
              }
            }
          }
        ]
      },
      "RunJournalEntryType": {
        "type": "object",
        "required": ["name"],
        "allOf": [
          {
            "$ref": "#/components/schemas/JournalBaseEntry"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "entry_type": { "type": "string", "enum": ["Run"] },
              "failure": {
                "$ref": "#/components/schemas/FailureEntry"
              },
              "value": { "type": "string" }
            }
          }
        ]
      },
      "InboxResponse": {
        "type": "object",
        "required": ["length", "head"],
        "properties": {
          "size": {
            "type": "integer"
          },
          "head": { "type": "string" }
        },
        "additionalProperties": {
          "type": "integer"
        }
      },
      "Invocation": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "modified_at",
          "scheduled_at",
          "invoked_by",
          "status",
          "target",
          "target_handler_name",
          "target_service_name",
          "target_service_ty"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time"
          },
          "scheduled_at": {
            "type": "string",
            "format": "date-time"
          },
          "inboxed_at": {
            "type": "string",
            "format": "date-time"
          },
          "running_at": {
            "type": "string",
            "format": "date-time"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_start_at": {
            "type": "string",
            "format": "date-time"
          },
          "next_retry_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "invoked_by": {
            "type": "string",
            "enum": ["ingress", "service"]
          },
          "status": {
            "type": "string",
            "enum": [
              "succeeded",
              "failed",
              "cancelled",
              "killed",
              "retrying",
              "running",
              "suspended",
              "scheduled",
              "pending",
              "ready"
            ]
          },
          "target": {
            "type": "string"
          },
          "target_handler_name": {
            "type": "string"
          },
          "target_service_key": {
            "type": "string"
          },
          "target_service_name": {
            "type": "string"
          },
          "target_service_ty": {
            "type": "string",
            "enum": ["service", "virtual_object", "workflow"]
          },
          "completion_result": {
            "type": "string",
            "enum": ["success", "failure"]
          },
          "completion_failure": {
            "type": "string"
          },
          "invoked_by_service_name": {
            "type": "string"
          },
          "invoked_by_id": {
            "type": "string"
          },
          "invoked_by_target": {
            "type": "string"
          },
          "pinned_deployment_id": {
            "type": "string"
          },
          "trace_id": {
            "type": "string"
          },
          "idempotency_key": {
            "type": "string"
          },
          "journal_size": {
            "type": "integer",
            "format": "uint32"
          },
          "pinned_service_protocol_version": {
            "type": "integer",
            "format": "uint32"
          },
          "journal_commands_size": {
            "type": "integer",
            "format": "uint32"
          },
          "retry_count": {
            "type": "integer",
            "format": "uint64"
          },
          "last_failure_related_entry_index": {
            "type": "integer",
            "format": "uint64"
          },
          "last_failure_related_entry_name": {
            "type": "string"
          },
          "last_failure_related_entry_type": {
            "type": "string"
          },
          "last_failure_related_command_index": {
            "type": "integer",
            "format": "uint64"
          },
          "last_failure_related_command_name": {
            "type": "string"
          },
          "last_failure_related_command_type": {
            "type": "string"
          },
          "last_attempt_deployment_id": {
            "type": "string"
          },
          "last_attempt_server": {
            "type": "string"
          },
          "last_failure": {
            "type": "string"
          },
          "last_failure_error_code": {
            "type": "string"
          }
        }
      },
      "RawInvocation": {
        "type": "object",
        "required": [
          "id",
          "created_at",
          "modified_at",
          "scheduled_at",
          "invoked_by",
          "status",
          "target",
          "target_handler_name",
          "target_service_name",
          "target_service_ty"
        ],
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "modified_at": {
            "type": "string",
            "format": "date-time"
          },
          "scheduled_at": {
            "type": "string",
            "format": "date-time"
          },
          "inboxed_at": {
            "type": "string",
            "format": "date-time"
          },
          "running_at": {
            "type": "string",
            "format": "date-time"
          },
          "completed_at": {
            "type": "string",
            "format": "date-time"
          },
          "last_start_at": {
            "type": "string",
            "format": "date-time"
          },
          "next_retry_at": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "string"
          },
          "invoked_by": {
            "type": "string",
            "enum": ["ingress", "service"]
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "scheduled",
              "ready",
              "running",
              "backing-off",
              "suspended",
              "completed"
            ]
          },
          "target": {
            "type": "string"
          },
          "target_handler_name": {
            "type": "string"
          },
          "target_service_key": {
            "type": "string"
          },
          "target_service_name": {
            "type": "string"
          },
          "target_service_ty": {
            "type": "string",
            "enum": ["service", "virtual_object", "workflow"]
          },
          "completion_result": {
            "type": "string",
            "enum": ["success", "failure"]
          },
          "completion_failure": {
            "type": "string"
          },
          "invoked_by_service_name": {
            "type": "string"
          },
          "invoked_by_id": {
            "type": "string"
          },
          "invoked_by_target": {
            "type": "string"
          },
          "pinned_deployment_id": {
            "type": "string"
          },
          "trace_id": {
            "type": "string"
          },
          "idempotency_key": {
            "type": "string"
          },
          "journal_size": {
            "type": "integer",
            "format": "uint32"
          },
          "pinned_service_protocol_version": {
            "type": "integer",
            "format": "uint32"
          },
          "journal_commands_size": {
            "type": "integer",
            "format": "uint32"
          },
          "retry_count": {
            "type": "integer",
            "format": "uint64"
          },
          "last_failure_related_command_index": {
            "type": "integer",
            "format": "uint64"
          },
          "last_failure_related_command_name": {
            "type": "string"
          },
          "last_failure_related_command_type": {
            "type": "string"
          },
          "last_failure_related_entry_index": {
            "type": "integer",
            "format": "uint64"
          },
          "last_failure_related_entry_name": {
            "type": "string"
          },
          "last_failure_related_entry_type": {
            "type": "string"
          },
          "last_attempt_deployment_id": {
            "type": "string"
          },
          "last_attempt_server": {
            "type": "string"
          },
          "last_failure": {
            "type": "string"
          },
          "last_failure_error_code": {
            "type": "string"
          }
        }
      }
    }
  }
}
