on:
  push:
    branches: [main]
jobs:
  check-version:
    runs-on: warp-ubuntu-latest-x64-4x
    steps:
      - uses: pnpm/action-setup@v4
        with:
          version: 10.9.0
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: johnnybenson/package-json-versioned-action@v1.0.9
        id: package-json
        with:
          GITHUB_TOKEN: ${{ secrets.TOKEN_FOR_RESTATE_REPO }}
      - run: echo "has-updated -- ${{ steps.package-json.outputs.has-updated }}"
    outputs:
      has-updated: ${{ steps.package-json.outputs.has-updated }}
      version: ${{ steps.package-json.outputs.version }}
  release:
    runs-on: warp-ubuntu-latest-x64-4x
    name: Release
    needs: check-version
    permissions:
      contents: write
    if: ${{ needs.check-version.outputs.has-updated == 'true' }}
    outputs:
      upload-url: ${{ steps.create-release.outputs.upload_url }}
      version: ${{ needs.check-version.outputs.version }}
      tag: v${{ needs.check-version.outputs.version }}
      artifact-name: ui-v${{ needs.check-version.outputs.version }}.zip
    steps:
      - run: echo "has-updated -- ${{ needs.check-version.outputs.has-updated }}"
      - uses: pnpm/action-setup@v4
        with:
          version: 10.9.0
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: pnpm install --frozen-lockfile
      - run: pnpm nx build web-ui --skip-nx-cache
      - run: cd dist/apps/web-ui && zip -r ../../../ui-v${{ needs.check-version.outputs.version }}.zip .
      - name: Create a release
        id: create-release
        uses: ncipollo/release-action@v1
        with:
          commit: ${{ github.sha }}
          makeLatest: true
          tag: v${{ needs.check-version.outputs.version }}
          artifacts: ui-v${{ needs.check-version.outputs.version }}.zip
          generateReleaseNotes: true
  update-ui-crate:
    name: Update UI in restate-web-ui-crate repo
    runs-on: warp-ubuntu-latest-x64-4x
    needs: release
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOKEN_FOR_RESTATE_REPO }}
          repository: restatedev/restate-web-ui-crate
      - name: Remove old artifacts
        run: rm -f ./assets/*.zip
      - name: Download artifact
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          version: tags/${{ needs.release.outputs.tag }}
          file: ${{ needs.release.outputs.artifact-name }}
          target: ./assets/${{ needs.release.outputs.artifact-name }}
          token: ${{ secrets.TOKEN_FOR_RESTATE_REPO }}
      - name: Calculate SHA256 checksum and set as env var
        id: asset-hash
        run: |
          echo "FILE_SHA256=$(sha256sum ./assets/${{ needs.release.outputs.artifact-name }} | awk '{print $1}')" >> $GITHUB_ENV
        shell: bash
      - name: Install cargo-set-version
        run: cargo install cargo-set-version
      - name: Bump version
        run: cargo set-version ${{ needs.release.outputs.version }}
      - name: Build
        run: cargo build
      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.TOKEN_FOR_RESTATE_REPO }}
          branch: update-ui-${{needs.release.outputs.tag}}
          title: '[Restate UI] Update to ${{ needs.release.outputs.tag }}'
          sign-commits: true
          commit-message: |
            [UI] Updating UI assets to ${{ needs.release.outputs.tag }}
            ${{ needs.release.outputs.artifact-name }} published at https://github.com/restatedev/restate-web-ui/releases/download/${{ needs.release.outputs.tag }}/${{ needs.release.outputs.artifact-name }}
            sha256: ${{ env.FILE_SHA256 }}
          body: |
            ### [UI] Updating UI assets to ${{ needs.release.outputs.tag }}
            ${{ needs.release.outputs.artifact-name }} published at https://github.com/restatedev/restate-web-ui/releases/download/${{ needs.release.outputs.tag }}/${{ needs.release.outputs.artifact-name }}
            sha256: ${{ env.FILE_SHA256 }}
      - name: Enable Pull Request Automerge
        if: steps.cpr.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.TOKEN_FOR_RESTATE_REPO }}
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash
